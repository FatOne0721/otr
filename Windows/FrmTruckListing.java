/*
 * Nicholas Work
 * Mark Gertiser
 * Marty Carter
 * Shawn Russell
 */
package Windows;

import java.awt.Event;
import java.awt.event.KeyListener;
import static java.lang.System.out;
import javax.swing.JOptionPane;

public class FrmTruckListing extends javax.swing.JFrame {
    boolean isGood;
    /**
     * Creates new form FrmTruckListing
     */
    public FrmTruckListing() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFuelCost = new javax.swing.JLabel();
        txtFuelCost = new javax.swing.JTextField();
        lblFuelMileage = new javax.swing.JLabel();
        txtMileage = new javax.swing.JTextField();
        lblMilesPerWeek = new javax.swing.JLabel();
        txtMilesPerWeek = new javax.swing.JTextField();
        lblAddFuelTax = new javax.swing.JLabel();
        txtAddFuelTax = new javax.swing.JTextField();
        lblMaintExpense = new javax.swing.JLabel();
        lblTireExpense = new javax.swing.JLabel();
        lblWorkerComp = new javax.swing.JLabel();
        lblMealExpense = new javax.swing.JLabel();
        lblCoDriverExpense = new javax.swing.JLabel();
        lblHelperExpense = new javax.swing.JLabel();
        lblLodgingExpense = new javax.swing.JLabel();
        lblMiscExpense = new javax.swing.JLabel();
        lblTotalVarExpense = new javax.swing.JLabel();
        lblAvgCostPerMile = new javax.swing.JLabel();
        lblTotalRevenue = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        txtMaintExpense = new javax.swing.JTextField();
        txtTireExpense = new javax.swing.JTextField();
        txtWorkerComp = new javax.swing.JTextField();
        txtMealExpense = new javax.swing.JTextField();
        txtCoDriverExpense = new javax.swing.JTextField();
        txtHelperExpense = new javax.swing.JTextField();
        txtLodgingExpense = new javax.swing.JTextField();
        txtMiscExpense = new javax.swing.JTextField();
        txtTotalVarExpense = new javax.swing.JTextField();
        txtAvgCostPerMile = new javax.swing.JTextField();
        txtTotalRevenue = new javax.swing.JTextField();
        lblTractorPayment = new javax.swing.JLabel();
        lblTractorIns = new javax.swing.JLabel();
        lblBasePlate = new javax.swing.JLabel();
        lblHiWayUse = new javax.swing.JLabel();
        lblMiscOther = new javax.swing.JLabel();
        lblFixedExpenses = new javax.swing.JLabel();
        txtTractorPayment = new javax.swing.JTextField();
        txtTractorIns = new javax.swing.JTextField();
        txtBasePlate = new javax.swing.JTextField();
        txtHiWayUse = new javax.swing.JTextField();
        txtMiscOther = new javax.swing.JTextField();
        txtTotalFixedExpenses = new javax.swing.JTextField();
        lblLoadedPay = new javax.swing.JLabel();
        lblEmptyPay = new javax.swing.JLabel();
        lblHandling = new javax.swing.JLabel();
        txtLoadedPay = new javax.swing.JTextField();
        txtEmptyPay = new javax.swing.JTextField();
        txtHandling = new javax.swing.JTextField();
        lblStopCharge = new javax.swing.JLabel();
        txtStopCharge = new javax.swing.JTextField();
        lblFreightHandled = new javax.swing.JLabel();
        lblLoadedMiles = new javax.swing.JLabel();
        lblEmptyMiles = new javax.swing.JLabel();
        lblFuelSurcharge = new javax.swing.JLabel();
        lblAccesorials = new javax.swing.JLabel();
        lblTotalIncome = new javax.swing.JLabel();
        lblAverCostPerMonth = new javax.swing.JLabel();
        lblNetPreTaxEarning = new javax.swing.JLabel();
        txtEmptyMiles = new javax.swing.JTextField();
        txtFuelSurcharge = new javax.swing.JTextField();
        txtFreightHandled = new javax.swing.JTextField();
        txtAccesorials = new javax.swing.JTextField();
        txtTotalIncome = new javax.swing.JTextField();
        txtAvgCostPerMonth = new javax.swing.JTextField();
        txtNetPreTaxEarning = new javax.swing.JTextField();
        txtLoadedMiles = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblFuelCost.setText("Fuel Cost:");

        txtFuelCost.setEditable(false);
        txtFuelCost.setText("1.63");
        txtFuelCost.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFuelCostMouseClicked(evt);
            }
        });
        txtFuelCost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFuelCostKeyPressed(evt);
            }
        });

        lblFuelMileage.setText("Fuel Mileage");

        txtMileage.setEditable(false);
        txtMileage.setText("10000");
        txtMileage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMileageMouseClicked(evt);
            }
        });
        txtMileage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMileageKeyPressed(evt);
            }
        });

        lblMilesPerWeek.setText("Miles Per Week:");

        txtMilesPerWeek.setEditable(false);
        txtMilesPerWeek.setText("1200");
        txtMilesPerWeek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMilesPerWeekMouseClicked(evt);
            }
        });
        txtMilesPerWeek.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMilesPerWeekKeyPressed(evt);
            }
        });

        lblAddFuelTax.setText("Add'l Fuel Tax");

        txtAddFuelTax.setEditable(false);
        txtAddFuelTax.setText(".08");
        txtAddFuelTax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAddFuelTaxMouseClicked(evt);
            }
        });
        txtAddFuelTax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddFuelTaxKeyPressed(evt);
            }
        });

        lblMaintExpense.setText("Maint' Expense (per mile):");

        lblTireExpense.setText("Tire Expense (per mile):");

        lblWorkerComp.setText("Workers Comp (per mile):");

        lblMealExpense.setText("Meal Expense:");

        lblCoDriverExpense.setText("Co-Driver Expense:");

        lblHelperExpense.setText("Helper Expense:");

        lblLodgingExpense.setText("Lodging Expense:");

        lblMiscExpense.setText("Misc. Expense:");

        lblTotalVarExpense.setText("Total Variable Expense:");

        lblAvgCostPerMile.setText("Average Cost Per Mile:");

        lblTotalRevenue.setText("Total Revenue");

        txtMaintExpense.setEditable(false);
        txtMaintExpense.setText(".25");
        txtMaintExpense.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMaintExpenseMouseClicked(evt);
            }
        });
        txtMaintExpense.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaintExpenseKeyPressed(evt);
            }
        });

        txtTireExpense.setEditable(false);
        txtTireExpense.setText(".50");
        txtTireExpense.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTireExpenseMouseClicked(evt);
            }
        });
        txtTireExpense.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTireExpenseKeyPressed(evt);
            }
        });

        txtWorkerComp.setEditable(false);
        txtWorkerComp.setText("1.00");
        txtWorkerComp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtWorkerCompMouseClicked(evt);
            }
        });
        txtWorkerComp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtWorkerCompKeyPressed(evt);
            }
        });

        txtMealExpense.setEditable(false);
        txtMealExpense.setText("200.00");
        txtMealExpense.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMealExpenseMouseClicked(evt);
            }
        });
        txtMealExpense.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMealExpenseKeyPressed(evt);
            }
        });

        txtCoDriverExpense.setEditable(false);
        txtCoDriverExpense.setText("0.00");
        txtCoDriverExpense.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCoDriverExpenseMouseClicked(evt);
            }
        });
        txtCoDriverExpense.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCoDriverExpenseKeyPressed(evt);
            }
        });

        txtHelperExpense.setEditable(false);
        txtHelperExpense.setText("100.00");
        txtHelperExpense.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtHelperExpenseMouseClicked(evt);
            }
        });
        txtHelperExpense.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHelperExpenseKeyPressed(evt);
            }
        });

        txtLodgingExpense.setEditable(false);
        txtLodgingExpense.setText("50.00");
        txtLodgingExpense.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtLodgingExpenseMouseClicked(evt);
            }
        });
        txtLodgingExpense.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLodgingExpenseKeyPressed(evt);
            }
        });

        txtMiscExpense.setEditable(false);
        txtMiscExpense.setText("50.00");
        txtMiscExpense.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMiscExpenseMouseClicked(evt);
            }
        });
        txtMiscExpense.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMiscExpenseKeyPressed(evt);
            }
        });

        txtTotalVarExpense.setEditable(false);
        txtTotalVarExpense.setText("500.00");
        txtTotalVarExpense.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTotalVarExpenseMouseClicked(evt);
            }
        });
        txtTotalVarExpense.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTotalVarExpenseKeyPressed(evt);
            }
        });

        txtAvgCostPerMile.setEditable(false);
        txtAvgCostPerMile.setText("5.00");
        txtAvgCostPerMile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAvgCostPerMileMouseClicked(evt);
            }
        });
        txtAvgCostPerMile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAvgCostPerMileKeyPressed(evt);
            }
        });

        txtTotalRevenue.setEditable(false);
        txtTotalRevenue.setText("5000.00");
        txtTotalRevenue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTotalRevenueKeyPressed(evt);
            }
        });

        lblTractorPayment.setText("Tractor Payment:");

        lblTractorIns.setText("Tractor Ins.");

        lblBasePlate.setText("Base Plate:");

        lblHiWayUse.setText("Hi-Way Use:");

        lblMiscOther.setText("Misc. Other:");

        lblFixedExpenses.setText("Total Fixed Expenses:");

        txtTractorPayment.setEditable(false);
        txtTractorPayment.setText("2000.00");
        txtTractorPayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTractorPaymentMouseClicked(evt);
            }
        });
        txtTractorPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTractorPaymentKeyPressed(evt);
            }
        });

        txtTractorIns.setEditable(false);
        txtTractorIns.setText("100.00");
        txtTractorIns.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTractorInsMouseClicked(evt);
            }
        });
        txtTractorIns.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTractorInsKeyPressed(evt);
            }
        });

        txtBasePlate.setEditable(false);
        txtBasePlate.setText("200.00");
        txtBasePlate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBasePlateMouseClicked(evt);
            }
        });
        txtBasePlate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBasePlateKeyPressed(evt);
            }
        });

        txtHiWayUse.setEditable(false);
        txtHiWayUse.setText("20.00");
        txtHiWayUse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtHiWayUseMouseClicked(evt);
            }
        });
        txtHiWayUse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHiWayUseKeyPressed(evt);
            }
        });

        txtMiscOther.setEditable(false);
        txtMiscOther.setText("50.00");
        txtMiscOther.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMiscOtherMouseClicked(evt);
            }
        });
        txtMiscOther.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMiscOtherKeyPressed(evt);
            }
        });

        txtTotalFixedExpenses.setEditable(false);
        txtTotalFixedExpenses.setText("2370.00");
        txtTotalFixedExpenses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTotalFixedExpensesMouseClicked(evt);
            }
        });
        txtTotalFixedExpenses.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTotalFixedExpensesKeyPressed(evt);
            }
        });

        lblLoadedPay.setText("Loaded Pay:");

        lblEmptyPay.setText("Empty Pay:");

        lblHandling.setText("Handling:");

        txtLoadedPay.setEditable(false);
        txtLoadedPay.setText("0.0");
        txtLoadedPay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtLoadedPayMouseClicked(evt);
            }
        });
        txtLoadedPay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLoadedPayKeyPressed(evt);
            }
        });

        txtEmptyPay.setEditable(false);
        txtEmptyPay.setText("0.0");
        txtEmptyPay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEmptyPayMouseClicked(evt);
            }
        });
        txtEmptyPay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmptyPayKeyPressed(evt);
            }
        });

        txtHandling.setEditable(false);
        txtHandling.setText("0.0");
        txtHandling.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtHandlingMouseClicked(evt);
            }
        });
        txtHandling.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHandlingKeyPressed(evt);
            }
        });

        lblStopCharge.setText("Stop Charge:");

        txtStopCharge.setEditable(false);
        txtStopCharge.setText("0.0");
        txtStopCharge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtStopChargeMouseClicked(evt);
            }
        });
        txtStopCharge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStopChargeKeyPressed(evt);
            }
        });

        lblFreightHandled.setText("Freight Handled:");

        lblLoadedMiles.setText("Loaded Miles:");

        lblEmptyMiles.setText("Empty Miles:");

        lblFuelSurcharge.setText("Fuel Surcharge:");

        lblAccesorials.setText("Accesorials:");

        lblTotalIncome.setText("Total Income:");

        lblAverCostPerMonth.setText("Average Cost Per Month:");

        lblNetPreTaxEarning.setText("Net Pre Tax Earning:");

        txtEmptyMiles.setEditable(false);
        txtEmptyMiles.setText("2500");
        txtEmptyMiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEmptyMilesMouseClicked(evt);
            }
        });
        txtEmptyMiles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmptyMilesKeyPressed(evt);
            }
        });

        txtFuelSurcharge.setEditable(false);
        txtFuelSurcharge.setText("1.255");
        txtFuelSurcharge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFuelSurchargeMouseClicked(evt);
            }
        });
        txtFuelSurcharge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFuelSurchargeKeyPressed(evt);
            }
        });

        txtFreightHandled.setEditable(false);
        txtFreightHandled.setText("40000");
        txtFreightHandled.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFreightHandledMouseClicked(evt);
            }
        });
        txtFreightHandled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFreightHandledKeyPressed(evt);
            }
        });

        txtAccesorials.setEditable(false);
        txtAccesorials.setText("900");
        txtAccesorials.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAccesorialsMouseClicked(evt);
            }
        });
        txtAccesorials.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAccesorialsKeyPressed(evt);
            }
        });

        txtTotalIncome.setEditable(false);
        txtTotalIncome.setText("6000");
        txtTotalIncome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTotalIncomeMouseClicked(evt);
            }
        });
        txtTotalIncome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTotalIncomeKeyPressed(evt);
            }
        });

        txtAvgCostPerMonth.setEditable(false);
        txtAvgCostPerMonth.setText("12500");
        txtAvgCostPerMonth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAvgCostPerMonthMouseClicked(evt);
            }
        });
        txtAvgCostPerMonth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAvgCostPerMonthKeyPressed(evt);
            }
        });

        txtNetPreTaxEarning.setEditable(false);
        txtNetPreTaxEarning.setText("8200");
        txtNetPreTaxEarning.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNetPreTaxEarningMouseClicked(evt);
            }
        });
        txtNetPreTaxEarning.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNetPreTaxEarningKeyPressed(evt);
            }
        });

        txtLoadedMiles.setEditable(false);
        txtLoadedMiles.setText("1000");
        txtLoadedMiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtLoadedMilesMouseClicked(evt);
            }
        });
        txtLoadedMiles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLoadedMilesKeyPressed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditMouseClicked(evt);
            }
        });

        btnSave.setText("Save");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTotalRevenue)
                    .addComponent(lblAvgCostPerMile)
                    .addComponent(lblTotalVarExpense)
                    .addComponent(lblMiscExpense)
                    .addComponent(lblLodgingExpense)
                    .addComponent(lblHelperExpense)
                    .addComponent(lblCoDriverExpense)
                    .addComponent(lblMealExpense)
                    .addComponent(lblWorkerComp)
                    .addComponent(lblTireExpense)
                    .addComponent(lblMaintExpense)
                    .addComponent(lblAddFuelTax)
                    .addComponent(lblFuelMileage)
                    .addComponent(lblFuelCost)
                    .addComponent(lblMilesPerWeek))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtLodgingExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHelperExpense, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCoDriverExpense, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMealExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMiscExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblStopCharge)
                                    .addComponent(lblLoadedMiles)
                                    .addComponent(lblEmptyMiles)
                                    .addComponent(lblFuelSurcharge))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStopCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLoadedMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmptyMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFuelSurcharge, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtMilesPerWeek, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtWorkerComp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTireExpense, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaintExpense, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMileage, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFuelCost, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAddFuelTax, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(92, 92, 92)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblLoadedPay)
                                    .addComponent(lblEmptyPay)
                                    .addComponent(lblHandling))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmptyPay, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLoadedPay, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHandling, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotalIncome, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAccesorials, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFreightHandled, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTractorPayment, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTractorIns, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblBasePlate, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblHiWayUse, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMiscOther, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFixedExpenses, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotalFixedExpenses, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMiscOther, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHiWayUse, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBasePlate, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTractorIns, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTractorPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFreightHandled, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAccesorials, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTotalVarExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTotalRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAvgCostPerMile, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblAverCostPerMonth)
                                    .addComponent(lblNetPreTaxEarning))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNetPreTaxEarning, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAvgCostPerMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMilesPerWeek)
                                    .addComponent(txtMilesPerWeek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblFuelCost)
                                            .addComponent(txtFuelCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblFuelMileage)
                                            .addComponent(txtMileage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblAddFuelTax)
                                            .addComponent(txtAddFuelTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtMaintExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblMaintExpense))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblTireExpense)
                                            .addComponent(txtTireExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblWorkerComp)
                                            .addComponent(txtWorkerComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtLoadedPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblLoadedPay))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtEmptyPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblEmptyPay))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtHandling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblHandling))))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblMealExpense)
                                            .addComponent(txtMealExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblCoDriverExpense)
                                            .addComponent(txtCoDriverExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblHelperExpense)
                                            .addComponent(txtHelperExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblLodgingExpense)
                                            .addComponent(txtLodgingExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(lblFreightHandled)
                                                    .addComponent(txtFreightHandled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(txtAccesorials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblAccesorials))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(txtTotalIncome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblTotalIncome)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(txtStopCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblStopCharge))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(txtLoadedMiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblLoadedMiles))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(txtEmptyMiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblEmptyMiles))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtFuelSurcharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblFuelSurcharge)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTractorPayment)
                                    .addComponent(txtTractorPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTractorIns)
                                    .addComponent(txtTractorIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblBasePlate)
                                    .addComponent(txtBasePlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblHiWayUse)
                                    .addComponent(txtHiWayUse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMiscOther)
                                    .addComponent(txtMiscOther, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblFixedExpenses)
                                    .addComponent(txtTotalFixedExpenses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMiscExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMiscExpense))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalVarExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotalVarExpense)
                    .addComponent(btnSave)
                    .addComponent(btnEdit))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAvgCostPerMile)
                            .addComponent(txtAvgCostPerMile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotalRevenue)
                            .addComponent(txtTotalRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAverCostPerMonth)
                            .addComponent(txtAvgCostPerMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNetPreTaxEarning)
                            .addComponent(txtNetPreTaxEarning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseClicked
        String txtCaption = btnEdit.getText();
        
        if (txtCaption == "View")
        {
            btnEdit.setText("Edit");
            txtAccesorials.setEditable(false);
            txtAddFuelTax.setEditable(false);
            txtAvgCostPerMile.setEditable(false);
            txtAvgCostPerMonth.setEditable(false);
            txtBasePlate.setEditable(false);
            txtCoDriverExpense.setEditable(false);
            txtEmptyMiles.setEditable(false);
            txtEmptyPay.setEditable(false);
            txtFuelCost.setEditable(false);
            txtFuelSurcharge.setEditable(false);
            txtHandling.setEditable(false);
            txtHelperExpense.setEditable(false);
            txtHiWayUse.setEditable(false);
            txtLoadedMiles.setEditable(false);
            txtLoadedPay.setEditable(false);
            txtLodgingExpense.setEditable(false);
            txtMaintExpense.setEditable(false);
            txtMealExpense.setEditable(false);
            txtMileage.setEditable(false);
            txtMilesPerWeek.setEditable(false);
            txtMiscExpense.setEditable(false);
            txtMiscOther.setEditable(false);
            txtNetPreTaxEarning.setEditable(false);
            txtStopCharge.setEditable(false);
            txtTireExpense.setEditable(false);
            txtTotalFixedExpenses.setEditable(false);
            txtTotalIncome.setEditable(false);
            txtTotalRevenue.setEditable(false);
            txtTotalVarExpense.setEditable(false);
            txtTractorIns.setEditable(false);
            txtTractorPayment.setEditable(false);
            txtWorkerComp.setEditable(false);
        }
        else /*(txtCaption == "View")*/
        {
            btnEdit.setText("View");
            txtAccesorials.setEditable(true);
            txtAddFuelTax.setEditable(true);
            txtAvgCostPerMile.setEditable(true);
            txtAvgCostPerMonth.setEditable(true);
            txtBasePlate.setEditable(true);
            txtCoDriverExpense.setEditable(true);
            txtEmptyMiles.setEditable(true);
            txtEmptyPay.setEditable(true);
            txtFuelCost.setEditable(true);
            txtFuelSurcharge.setEditable(true);
            txtHandling.setEditable(true);
            txtHelperExpense.setEditable(true);
            txtHiWayUse.setEditable(true);
            txtLoadedMiles.setEditable(true);
            txtLoadedPay.setEditable(true);
            txtLodgingExpense.setEditable(true);
            txtMaintExpense.setEditable(true);
            txtMealExpense.setEditable(true);
            txtMileage.setEditable(true);
            txtMilesPerWeek.setEditable(true);
            txtMiscExpense.setEditable(true);
            txtMiscOther.setEditable(true);
            txtNetPreTaxEarning.setEditable(true);
            txtStopCharge.setEditable(true);
            txtTireExpense.setEditable(true);
            txtTotalFixedExpenses.setEditable(true);
            txtTotalIncome.setEditable(true);
            txtTotalRevenue.setEditable(true);
            txtTotalVarExpense.setEditable(true);
            txtTractorIns.setEditable(true);
            txtTractorPayment.setEditable(true);
            txtWorkerComp.setEditable(true);
        }
    }//GEN-LAST:event_btnEditMouseClicked

    private void txtTractorPaymentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTractorPaymentKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtTractorPaymentKeyPressed

    private void txtMilesPerWeekKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMilesPerWeekKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtMilesPerWeekKeyPressed

    private void txtFuelCostKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFuelCostKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtFuelCostKeyPressed

    private void txtMileageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMileageKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtMileageKeyPressed

    private void txtAddFuelTaxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddFuelTaxKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtAddFuelTaxKeyPressed

    private void txtMaintExpenseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaintExpenseKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtMaintExpenseKeyPressed

    private void txtTireExpenseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTireExpenseKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtTireExpenseKeyPressed

    private void txtWorkerCompKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWorkerCompKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtWorkerCompKeyPressed

    private void txtMealExpenseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMealExpenseKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtMealExpenseKeyPressed

    private void txtCoDriverExpenseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCoDriverExpenseKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtCoDriverExpenseKeyPressed

    private void txtHelperExpenseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHelperExpenseKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtHelperExpenseKeyPressed

    private void txtLodgingExpenseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLodgingExpenseKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtLodgingExpenseKeyPressed

    private void txtMiscExpenseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMiscExpenseKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtMiscExpenseKeyPressed

    private void txtTotalVarExpenseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalVarExpenseKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtTotalVarExpenseKeyPressed

    private void txtAvgCostPerMileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAvgCostPerMileKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtAvgCostPerMileKeyPressed

    private void txtTotalRevenueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalRevenueKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtTotalRevenueKeyPressed

    private void txtLoadedPayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLoadedPayKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtLoadedPayKeyPressed

    private void txtEmptyPayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmptyPayKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtEmptyPayKeyPressed

    private void txtHandlingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHandlingKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtHandlingKeyPressed

    private void txtStopChargeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStopChargeKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtStopChargeKeyPressed

    private void txtLoadedMilesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLoadedMilesKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtLoadedMilesKeyPressed

    private void txtEmptyMilesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmptyMilesKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtEmptyMilesKeyPressed

    private void txtFuelSurchargeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFuelSurchargeKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtFuelSurchargeKeyPressed

    private void txtTractorInsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTractorInsKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtTractorInsKeyPressed

    private void txtBasePlateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBasePlateKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtBasePlateKeyPressed

    private void txtHiWayUseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHiWayUseKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtHiWayUseKeyPressed

    private void txtMiscOtherKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMiscOtherKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtMiscOtherKeyPressed

    private void txtTotalFixedExpensesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalFixedExpensesKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtTotalFixedExpensesKeyPressed

    private void txtFreightHandledKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFreightHandledKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtFreightHandledKeyPressed

    private void txtAccesorialsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAccesorialsKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtAccesorialsKeyPressed

    private void txtTotalIncomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalIncomeKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtTotalIncomeKeyPressed

    private void txtAvgCostPerMonthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAvgCostPerMonthKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtAvgCostPerMonthKeyPressed

    private void txtNetPreTaxEarningKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNetPreTaxEarningKeyPressed
        int key_Code = evt.getKeyCode();
        checkKeyCode(key_Code);
        if (isGood != true)
        {
            evt.setKeyCode(8);
            JOptionPane.showMessageDialog(null,"Invalid character! Numeric characters only!","Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        // Used this for debugging to find the keycode associated with the accepted keys.
        //out.println(evt);
    }//GEN-LAST:event_txtNetPreTaxEarningKeyPressed

    private void txtMilesPerWeekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMilesPerWeekMouseClicked
        if (txtMilesPerWeek.isEditable() == true)
        {
            txtMilesPerWeek.selectAll();
        }
    }//GEN-LAST:event_txtMilesPerWeekMouseClicked

    private void txtFuelCostMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFuelCostMouseClicked
        if (txtFuelCost.isEditable() == true)
        {
            txtFuelCost.selectAll();
        }
    }//GEN-LAST:event_txtFuelCostMouseClicked

    private void txtMileageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMileageMouseClicked
        if (txtMileage.isEditable() == true)
        {
            txtMileage.selectAll();
        }
    }//GEN-LAST:event_txtMileageMouseClicked

    private void txtAddFuelTaxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAddFuelTaxMouseClicked
        if (txtAddFuelTax.isEditable() == true)
        {
            txtAddFuelTax.selectAll();
        }
    }//GEN-LAST:event_txtAddFuelTaxMouseClicked

    private void txtAccesorialsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAccesorialsMouseClicked
        if (txtAccesorials.isEditable() == true)
        {
            txtAccesorials.selectAll();
        }
    }//GEN-LAST:event_txtAccesorialsMouseClicked

    private void txtAvgCostPerMileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAvgCostPerMileMouseClicked
        if (txtAvgCostPerMile.isEditable() == true)
        {
            txtAvgCostPerMile.selectAll();
        }
    }//GEN-LAST:event_txtAvgCostPerMileMouseClicked

    private void txtAvgCostPerMonthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAvgCostPerMonthMouseClicked
        if (txtAvgCostPerMonth.isEditable() == true)
        {
            txtAvgCostPerMonth.selectAll();
        }
    }//GEN-LAST:event_txtAvgCostPerMonthMouseClicked

    private void txtBasePlateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBasePlateMouseClicked
        if (txtBasePlate.isEditable() == true)
        {
            txtBasePlate.selectAll();
        }
    }//GEN-LAST:event_txtBasePlateMouseClicked

    private void txtCoDriverExpenseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCoDriverExpenseMouseClicked
        if (txtCoDriverExpense.isEditable() == true)
        {
            txtCoDriverExpense.selectAll();
        }
    }//GEN-LAST:event_txtCoDriverExpenseMouseClicked

    private void txtEmptyMilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEmptyMilesMouseClicked
        if (txtEmptyMiles.isEditable() == true)
        {
            txtEmptyMiles.selectAll();
        }
    }//GEN-LAST:event_txtEmptyMilesMouseClicked

    private void txtEmptyPayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEmptyPayMouseClicked
        if (txtEmptyPay.isEditable() == true)
        {
            txtEmptyPay.selectAll();
        }
    }//GEN-LAST:event_txtEmptyPayMouseClicked

    private void txtFreightHandledMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFreightHandledMouseClicked
        if (txtFreightHandled.isEditable() == true)
        {
            txtFreightHandled.selectAll();
        }
    }//GEN-LAST:event_txtFreightHandledMouseClicked

    private void txtFuelSurchargeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFuelSurchargeMouseClicked
        if (txtFuelSurcharge.isEditable() == true)
        {
            txtFuelSurcharge.selectAll();
        }
    }//GEN-LAST:event_txtFuelSurchargeMouseClicked

    private void txtHandlingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtHandlingMouseClicked
        if (txtHandling.isEditable() == true)
        {
            txtHandling.selectAll();
        }
    }//GEN-LAST:event_txtHandlingMouseClicked

    private void txtHelperExpenseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtHelperExpenseMouseClicked
        if (txtHelperExpense.isEditable() == true)
        {
            txtHelperExpense.selectAll();
        }
    }//GEN-LAST:event_txtHelperExpenseMouseClicked

    private void txtHiWayUseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtHiWayUseMouseClicked
        if (txtHiWayUse.isEditable() == true)
        {
            txtHiWayUse.selectAll();
        }
    }//GEN-LAST:event_txtHiWayUseMouseClicked

    private void txtLoadedMilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLoadedMilesMouseClicked
        if (txtLoadedMiles.isEditable() == true)
        {
            txtLoadedMiles.selectAll();
        }
    }//GEN-LAST:event_txtLoadedMilesMouseClicked

    private void txtLoadedPayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLoadedPayMouseClicked
        if (txtLoadedPay.isEditable() == true)
        {
            txtLoadedPay.selectAll();
        }
    }//GEN-LAST:event_txtLoadedPayMouseClicked

    private void txtLodgingExpenseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLodgingExpenseMouseClicked
        if (txtLodgingExpense.isEditable() == true)
        {
            txtLodgingExpense.selectAll();
        }
    }//GEN-LAST:event_txtLodgingExpenseMouseClicked

    private void txtMaintExpenseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMaintExpenseMouseClicked
        if (txtMaintExpense.isEditable() == true)
        {
            txtMaintExpense.selectAll();
        }
    }//GEN-LAST:event_txtMaintExpenseMouseClicked

    private void txtMealExpenseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMealExpenseMouseClicked
        if (txtMealExpense.isEditable() == true)
        {
            txtMealExpense.selectAll();
        }
    }//GEN-LAST:event_txtMealExpenseMouseClicked

    private void txtMiscExpenseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMiscExpenseMouseClicked
        if (txtMiscExpense.isEditable() == true)
        {
            txtMiscExpense.selectAll();
        }
    }//GEN-LAST:event_txtMiscExpenseMouseClicked

    private void txtMiscOtherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMiscOtherMouseClicked
        if (txtMiscOther.isEditable() == true)
        {
            txtMiscOther.selectAll();
        }
    }//GEN-LAST:event_txtMiscOtherMouseClicked

    private void txtNetPreTaxEarningMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNetPreTaxEarningMouseClicked
        if (txtNetPreTaxEarning.isEditable() == true)
        {
            txtNetPreTaxEarning.selectAll();
        }
    }//GEN-LAST:event_txtNetPreTaxEarningMouseClicked

    private void txtStopChargeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtStopChargeMouseClicked
        if (txtStopCharge.isEditable() == true)
        {
            txtStopCharge.selectAll();
        }
    }//GEN-LAST:event_txtStopChargeMouseClicked

    private void txtTireExpenseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTireExpenseMouseClicked
        if (txtTireExpense.isEditable() == true)
        {
            txtTireExpense.selectAll();
        }
    }//GEN-LAST:event_txtTireExpenseMouseClicked

    private void txtTotalFixedExpensesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTotalFixedExpensesMouseClicked
        if (txtTotalFixedExpenses.isEditable() == true)
        {
            txtTotalFixedExpenses.selectAll();
        }
    }//GEN-LAST:event_txtTotalFixedExpensesMouseClicked

    private void txtTotalIncomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTotalIncomeMouseClicked
        if (txtTotalIncome.isEditable() == true)
        {
            txtTotalIncome.selectAll();
        }
    }//GEN-LAST:event_txtTotalIncomeMouseClicked

    private void txtTotalVarExpenseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTotalVarExpenseMouseClicked
        if (txtTotalVarExpense.isEditable() == true)
        {
            txtTotalVarExpense.selectAll();
        }
    }//GEN-LAST:event_txtTotalVarExpenseMouseClicked

    private void txtTractorInsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTractorInsMouseClicked
        if (txtTractorIns.isEditable() == true)
        {
            txtTractorIns.selectAll();
        }
    }//GEN-LAST:event_txtTractorInsMouseClicked

    private void txtTractorPaymentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTractorPaymentMouseClicked
        if (txtTractorPayment.isEditable() == true)
        {
            txtTractorPayment.selectAll();
        }
    }//GEN-LAST:event_txtTractorPaymentMouseClicked

    private void txtWorkerCompMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtWorkerCompMouseClicked
        if (txtWorkerComp.isEditable() == true)
        {
            txtWorkerComp.selectAll();
        }
    }//GEN-LAST:event_txtWorkerCompMouseClicked

    void checkKeyCode(int charCode)
        {
            switch (charCode){
                case 97:
                    isGood = true;
                    break;
                case 98:
                    isGood = true;
                    break;
                case 99:
                    isGood = true;
                    break;
                case 100:
                    isGood = true;
                    break;
                case 101:
                    isGood = true;
                    break;
                case 102:
                    isGood = true;
                    break;
                case 103:
                    isGood = true;
                    break;
                case 104:
                    isGood = true;
                    break;
                case 105:
                    isGood = true;
                    break;
                case 96:
                    isGood = true;
                    break;
                case 8:
                    isGood = true;
                    break;
                case 32:
                    isGood = true;
                    break;
                case 127:
                    isGood = true;
                    break;
                case 49:
                    isGood = true;
                    break;
                case 50:
                    isGood = true;
                    break;
                case 51:
                    isGood = true;
                    break;
                case 52:
                    isGood = true;
                    break;
                case 53:
                    isGood = true;
                    break;
                case 54:
                    isGood = true;
                    break;
                case 55:
                    isGood = true;
                    break;
                case 56:
                    isGood = true;
                    break;
                case 57:
                    isGood = true;
                    break;
                case 48:
                    isGood = true;
                    break;
                case 46:
                    isGood = true;
                    break;
                case 110:
                    isGood = true;
                    break;
                default:
                    isGood = false;
                    break;
            }
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmTruckListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmTruckListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmTruckListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmTruckListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmTruckListing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblAccesorials;
    private javax.swing.JLabel lblAddFuelTax;
    private javax.swing.JLabel lblAverCostPerMonth;
    private javax.swing.JLabel lblAvgCostPerMile;
    private javax.swing.JLabel lblBasePlate;
    private javax.swing.JLabel lblCoDriverExpense;
    private javax.swing.JLabel lblEmptyMiles;
    private javax.swing.JLabel lblEmptyPay;
    private javax.swing.JLabel lblFixedExpenses;
    private javax.swing.JLabel lblFreightHandled;
    private javax.swing.JLabel lblFuelCost;
    private javax.swing.JLabel lblFuelMileage;
    private javax.swing.JLabel lblFuelSurcharge;
    private javax.swing.JLabel lblHandling;
    private javax.swing.JLabel lblHelperExpense;
    private javax.swing.JLabel lblHiWayUse;
    private javax.swing.JLabel lblLoadedMiles;
    private javax.swing.JLabel lblLoadedPay;
    private javax.swing.JLabel lblLodgingExpense;
    private javax.swing.JLabel lblMaintExpense;
    private javax.swing.JLabel lblMealExpense;
    private javax.swing.JLabel lblMilesPerWeek;
    private javax.swing.JLabel lblMiscExpense;
    private javax.swing.JLabel lblMiscOther;
    private javax.swing.JLabel lblNetPreTaxEarning;
    private javax.swing.JLabel lblStopCharge;
    private javax.swing.JLabel lblTireExpense;
    private javax.swing.JLabel lblTotalIncome;
    private javax.swing.JLabel lblTotalRevenue;
    private javax.swing.JLabel lblTotalVarExpense;
    private javax.swing.JLabel lblTractorIns;
    private javax.swing.JLabel lblTractorPayment;
    private javax.swing.JLabel lblWorkerComp;
    private javax.swing.JTextField txtAccesorials;
    private javax.swing.JTextField txtAddFuelTax;
    private javax.swing.JTextField txtAvgCostPerMile;
    private javax.swing.JTextField txtAvgCostPerMonth;
    private javax.swing.JTextField txtBasePlate;
    private javax.swing.JTextField txtCoDriverExpense;
    private javax.swing.JTextField txtEmptyMiles;
    private javax.swing.JTextField txtEmptyPay;
    private javax.swing.JTextField txtFreightHandled;
    private javax.swing.JTextField txtFuelCost;
    private javax.swing.JTextField txtFuelSurcharge;
    private javax.swing.JTextField txtHandling;
    private javax.swing.JTextField txtHelperExpense;
    private javax.swing.JTextField txtHiWayUse;
    private javax.swing.JTextField txtLoadedMiles;
    private javax.swing.JTextField txtLoadedPay;
    private javax.swing.JTextField txtLodgingExpense;
    private javax.swing.JTextField txtMaintExpense;
    private javax.swing.JTextField txtMealExpense;
    private javax.swing.JTextField txtMileage;
    private javax.swing.JTextField txtMilesPerWeek;
    private javax.swing.JTextField txtMiscExpense;
    private javax.swing.JTextField txtMiscOther;
    private javax.swing.JTextField txtNetPreTaxEarning;
    private javax.swing.JTextField txtStopCharge;
    private javax.swing.JTextField txtTireExpense;
    private javax.swing.JTextField txtTotalFixedExpenses;
    private javax.swing.JTextField txtTotalIncome;
    private javax.swing.JTextField txtTotalRevenue;
    private javax.swing.JTextField txtTotalVarExpense;
    private javax.swing.JTextField txtTractorIns;
    private javax.swing.JTextField txtTractorPayment;
    private javax.swing.JTextField txtWorkerComp;
    // End of variables declaration//GEN-END:variables
}
